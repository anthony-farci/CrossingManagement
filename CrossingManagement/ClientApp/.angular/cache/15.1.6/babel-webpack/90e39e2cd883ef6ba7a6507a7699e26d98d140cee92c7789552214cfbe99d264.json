{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"../services/railroad-crossings.service\";\nfunction HomeComponent_p_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\")(1, \"em\");\n    i0.ɵɵtext(2, \"Loading...\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction HomeComponent_div_5_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 8);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const railroadCrossing_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngValue\", railroadCrossing_r3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", railroadCrossing_r3.fld_naam_ramses, \" \");\n  }\n}\nfunction HomeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"label\", 3);\n    i0.ɵɵtext(2, \"Select a railroad crossing:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4)(4, \"select\", 5);\n    i0.ɵɵlistener(\"ngModelChange\", function HomeComponent_div_5_Template_select_ngModelChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.selectedRailroadCrossing = $event);\n    });\n    i0.ɵɵtemplate(5, HomeComponent_div_5_option_5_Template, 2, 2, \"option\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 7);\n    i0.ɵɵlistener(\"click\", function HomeComponent_div_5_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.fetchData());\n    });\n    i0.ɵɵtext(7, \"Import\");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r1.selectedRailroadCrossing);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.railroadCrossings);\n  }\n}\nexport class HomeComponent {\n  constructor(http, railroadCrossingsService) {\n    this.railroadCrossingsService = railroadCrossingsService;\n    this.railroadCrossings = [];\n    /*http.get<RailroadCrossing[]>(\"https://opendata.infrabel.be/api/v2/catalog/datasets/geoow/exports/json?limit=-1&offset=0&timezone=UTC\").subscribe(result => {\n      this.railroadCrossings = result;\n    }, error => console.error(error));*/\n  }\n\n  ngOnInit() {\n    this.railroadCrossingsService.getAllRailroadCrossings().subscribe({\n      next: railroadCrossings => {\n        this.railroadCrossings = railroadCrossings;\n      },\n      error: response => {\n        console.log(response);\n      }\n    });\n  }\n  onChange(railroadCrossing) {\n    this.selectedRailroadCrossing = railroadCrossing.target.value;\n    console.log(this.selectedRailroadCrossing?.fld_naam_ramses);\n  }\n  fetchData() {}\n}\nHomeComponent.ɵfac = function HomeComponent_Factory(t) {\n  return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient), i0.ɵɵdirectiveInject(i2.RailroadCrossingsService));\n};\nHomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: HomeComponent,\n  selectors: [[\"app-home\"]],\n  decls: 8,\n  vars: 3,\n  consts: [[\"id\", \"title\"], [4, \"ngIf\"], [3, \"railroadCrossing\"], [\"for\", \"railroadCrossingSelect\"], [1, \"input-group\"], [\"name\", \"railroadCrossings\", \"id\", \"railroadCrossingSelect\", 1, \"form-select\", \"form-select-sm\", 3, \"ngModel\", \"ngModelChange\"], [3, \"ngValue\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"button\", \"id\", \"importButton\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [3, \"ngValue\"]],\n  template: function HomeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"h1\", 0);\n      i0.ɵɵtext(1, \"Railroad Crossings\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(2, \"p\");\n      i0.ɵɵtext(3, \"On this page, you can consult railroad crossing informations\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, HomeComponent_p_4_Template, 3, 0, \"p\", 1);\n      i0.ɵɵtemplate(5, HomeComponent_div_5_Template, 8, 2, \"div\", 1);\n      i0.ɵɵelementStart(6, \"div\");\n      i0.ɵɵelement(7, \"app-railroad-detail\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", !(ctx.railroadCrossings == null ? null : ctx.railroadCrossings.length));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.railroadCrossings.length);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"railroadCrossing\", ctx.selectedRailroadCrossing);\n    }\n  },\n  encapsulation: 2\n});","map":{"version":3,"mappings":";;;;;IAIAA,yBAAsC;IAAIA,0BAAU;IAAAA,iBAAK;;;;;IAOjDA,iCAAwF;IACpFA,YACJ;IAAAA,iBAAS;;;;IAFkDA,6CAA4B;IACnFA,eACJ;IADIA,oEACJ;;;;;;IAPRA,2BAAsC;IACEA,2CAA2B;IAAAA,iBAAQ;IACvEA,8BAAyB;IACwCA;MAAAA;MAAA;MAAA;IAAA,EAAsC;IAEnGA,0EAES;IACbA,iBAAS;IACTA,iCAAsF;IAAtBA;MAAAA;MAAA;MAAA,OAASA,iCAAW;IAAA,EAAC;IAACA,sBAAM;IAAAA,iBAAS;;;;IANpCA,eAAsC;IAAtCA,yDAAsC;IAE9DA,eAAoB;IAApBA,kDAAoB;;;ACHjE,OAAM,MAAOC,aAAa;EAKxBC,YAAYC,IAAgB,EAAUC,wBAAkD;IAAlD,6BAAwB,GAAxBA,wBAAwB;IAHvD,sBAAiB,GAAuB,EAAE;IAI/C;;;EAGF;;EAEAC,QAAQ;IACN,IAAI,CAACD,wBAAwB,CAACE,uBAAuB,EAAE,CAACC,SAAS,CAAC;MAChEC,IAAI,EAAGC,iBAAiB,IAAI;QAC1B,IAAI,CAACA,iBAAiB,GAAGA,iBAAiB;MAC5C,CAAC;MACDC,KAAK,EAAGC,QAAQ,IAAI;QAClBC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACvB;KACD,CAAC;EACJ;EAEAG,QAAQ,CAACC,gBAAqB;IAC5B,IAAI,CAACC,wBAAwB,GAAGD,gBAAgB,CAACE,MAAM,CAACC,KAAK;IAC7DN,OAAO,CAACC,GAAG,CAAC,IAAI,CAACG,wBAAwB,EAAEG,eAAe,CAAC;EAC7D;EAEAC,SAAS,IAET;;AA7BWnB,aAAa;mBAAbA,aAAa;AAAA;AAAbA,aAAa;QAAbA,aAAa;EAAAoB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MDR1BzB,6BAAe;MAAAA,kCAAkB;MAAAA,iBAAK;MAEtCA,yBAAG;MAAAA,4EAA4D;MAAAA,iBAAI;MAEnEA,0DAA6D;MAE7DA,8DAWM;MACNA,2BAAK;MACDA,yCAAyF;MAC7FA,iBAAM;;;MAhBFA,eAAgC;MAAhCA,6FAAgC;MAE9BA,eAA8B;MAA9BA,mDAA8B;MAaXA,eAA6C;MAA7CA,+DAA6C","names":["i0","HomeComponent","constructor","http","railroadCrossingsService","ngOnInit","getAllRailroadCrossings","subscribe","next","railroadCrossings","error","response","console","log","onChange","railroadCrossing","selectedRailroadCrossing","target","value","fld_naam_ramses","fetchData","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/Users/anthony/Documents/Infrabel Interview/CrossingManagement/CrossingManagement/ClientApp/src/app/home/home.component.html","/Users/anthony/Documents/Infrabel Interview/CrossingManagement/CrossingManagement/ClientApp/src/app/home/home.component.ts"],"sourcesContent":["<h1 id=\"title\">Railroad Crossings</h1>\n\n<p>On this page, you can consult railroad crossing informations</p>\n\n<p *ngIf=\"!railroadCrossings?.length\"><em>Loading...</em></p>\n\n<div *ngIf=\"railroadCrossings.length\">\n    <label for=\"railroadCrossingSelect\">Select a railroad crossing:</label>\n    <div class=\"input-group\">\n        <select name=\"railroadCrossings\" id=\"railroadCrossingSelect\" [(ngModel)]=\"selectedRailroadCrossing\"\n            class=\"form-select form-select-sm\">\n        <option *ngFor=\"let railroadCrossing of railroadCrossings\" [ngValue]=\"railroadCrossing\">\n            {{ railroadCrossing.fld_naam_ramses }}\n        </option>\n    </select>\n    <button type=\"button\" class=\"btn btn-primary\" id=\"importButton\" (click)=\"fetchData()\">Import</button>\n    </div>\n</div>\n<div>\n    <app-railroad-detail [railroadCrossing]=\"selectedRailroadCrossing\"></app-railroad-detail>\n</div>\n","import { Component } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { RailroadCrossingsService } from '../services/railroad-crossings.service';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n})\nexport class HomeComponent {\n\n  public railroadCrossings: RailroadCrossing[] = [];\n  selectedRailroadCrossing?: RailroadCrossing;\n\n  constructor(http: HttpClient, private railroadCrossingsService: RailroadCrossingsService) {\n    /*http.get<RailroadCrossing[]>(\"https://opendata.infrabel.be/api/v2/catalog/datasets/geoow/exports/json?limit=-1&offset=0&timezone=UTC\").subscribe(result => {\n      this.railroadCrossings = result;\n    }, error => console.error(error));*/\n  }\n\n  ngOnInit(): void {\n    this.railroadCrossingsService.getAllRailroadCrossings().subscribe({\n      next: (railroadCrossings) => {\n        this.railroadCrossings = railroadCrossings;\n      },\n      error: (response) => {\n        console.log(response);\n      }\n    });\n  }\n\n  onChange(railroadCrossing: any): void {\n    this.selectedRailroadCrossing = railroadCrossing.target.value;\n    console.log(this.selectedRailroadCrossing?.fld_naam_ramses);\n  }\n\n  fetchData() {\n\n  }\n}\n\nexport interface RailroadCrossing {\n  id: number,\n  fld_naam_ramses: string;\n  fld_actief_passief: string;\n  type_pn: string;\n  fld_geo_x: string;\n  fld_geo_y: string;\n  fld_postcode_en_gemeente: string;\n  position_du_passage_a_niveau: RailroadCrossingPosition;\n  type_lc: string;\n}\n\nexport interface RailroadCrossingPosition {\n  lon: number;\n  lat: number;\n}\n\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}