{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet EditRailroadComponent = class EditRailroadComponent {\n  constructor(route, railroadCrossingsService, router) {\n    this.route = route;\n    this.railroadCrossingsService = railroadCrossingsService;\n    this.router = router;\n    this.railroadCrossingDetail = {\n      id: 0,\n      fld_naam_ramses: '',\n      fld_actief_passief: '',\n      type_pn: '',\n      fld_geo_x: '',\n      fld_geo_y: '',\n      fld_postcode_en_gemeente: '',\n      position_du_passage_a_niveau: {\n        lat: 0,\n        lon: 0\n      },\n      type_lc: ''\n    };\n  }\n  ngOnInit() {\n    this.route.paramMap.subscribe({\n      next: params => {\n        const id = params.get('id');\n        if (id) {\n          this.railroadCrossingsService.getRailroadCrossingById(id).subscribe({\n            next: response => {\n              this.railroadCrossingDetail = response;\n            }\n          });\n        }\n      }\n    });\n  }\n  updateRailroadCrossing() {\n    this.railroadCrossingsService.updateRailroadCrossing(this.railroadCrossingDetail.id.toString(), this.railroadCrossingDetail).subscribe({\n      next: () => {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n  deleteRailroadCrossing(id) {\n    this.railroadCrossingsService.deleteRailroadCrossing(id).subscribe({\n      next: () => {\n        this.router.navigate(['/']);\n      }\n    });\n  }\n};\nEditRailroadComponent = __decorate([Component({\n  selector: 'app-edit-railroad',\n  templateUrl: './edit-railroad.component.html',\n  styleUrls: ['./edit-railroad.component.css']\n})], EditRailroadComponent);\nexport { EditRailroadComponent };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAU1C,IAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAiBhCC,YAAoBC,KAAqB,EAAUC,wBAAkD,EAAUC,MAAc;IAAzG,UAAK,GAALF,KAAK;IAA0B,6BAAwB,GAAxBC,wBAAwB;IAAoC,WAAM,GAANC,MAAM;IAfrH,2BAAsB,GAAqB;MACzCC,EAAE,EAAE,CAAC;MACLC,eAAe,EAAE,EAAE;MACnBC,kBAAkB,EAAE,EAAE;MACtBC,OAAO,EAAE,EAAE;MACXC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE,EAAE;MACbC,wBAAwB,EAAE,EAAE;MAC5BC,4BAA4B,EAAE;QAC5BC,GAAG,EAAE,CAAC;QACNC,GAAG,EAAE;OACN;MACDC,OAAO,EAAE;KACV;EAEgI;EAEjIC,QAAQ;IACN,IAAI,CAACd,KAAK,CAACe,QAAQ,CAACC,SAAS,CAAC;MAC5BC,IAAI,EAAGC,MAAM,IAAI;QACf,MAAMf,EAAE,GAAGe,MAAM,CAACC,GAAG,CAAC,IAAI,CAAC;QAC3B,IAAIhB,EAAE,EAAE;UACN,IAAI,CAACF,wBAAwB,CAACmB,uBAAuB,CAACjB,EAAE,CAAC,CAACa,SAAS,CAAC;YAClEC,IAAI,EAAGI,QAAQ,IAAI;cACjB,IAAI,CAACC,sBAAsB,GAAGD,QAAQ;YACxC;WACD,CAAC;;MAEN;KACD,CAAC;EACJ;EAEAE,sBAAsB;IACpB,IAAI,CAACtB,wBAAwB,CAACsB,sBAAsB,CAAC,IAAI,CAACD,sBAAsB,CAACnB,EAAE,CAACqB,QAAQ,EAAE,EAAE,IAAI,CAACF,sBAAsB,CAAC,CACzHN,SAAS,CAAC;MACTC,IAAI,EAAE,MAAK;QACT,IAAI,CAACf,MAAM,CAACuB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B;KACD,CAAC;EACN;EAEAC,sBAAsB,CAACvB,EAAU;IAC/B,IAAI,CAACF,wBAAwB,CAACyB,sBAAsB,CAACvB,EAAE,CAAC,CACrDa,SAAS,CAAC;MACTC,IAAI,EAAE,MAAK;QACT,IAAI,CAACf,MAAM,CAACuB,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;MAC7B;KACD,CAAC;EACN;CACD;AAnDY3B,qBAAqB,eALjCD,SAAS,CAAC;EACT8B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,GACW/B,qBAAqB,CAmDjC;SAnDYA,qBAAqB","names":["Component","EditRailroadComponent","constructor","route","railroadCrossingsService","router","id","fld_naam_ramses","fld_actief_passief","type_pn","fld_geo_x","fld_geo_y","fld_postcode_en_gemeente","position_du_passage_a_niveau","lat","lon","type_lc","ngOnInit","paramMap","subscribe","next","params","get","getRailroadCrossingById","response","railroadCrossingDetail","updateRailroadCrossing","toString","navigate","deleteRailroadCrossing","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/anthony/Documents/Infrabel Interview/CrossingManagement/CrossingManagement/ClientApp/src/app/edit-railroad/edit-railroad.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { RailroadCrossing } from '../home/home.component';\nimport { RailroadCrossingsService } from '../services/railroad-crossings.service';\n\n@Component({\n  selector: 'app-edit-railroad',\n  templateUrl: './edit-railroad.component.html',\n  styleUrls: ['./edit-railroad.component.css']\n})\nexport class EditRailroadComponent implements OnInit {\n\n  railroadCrossingDetail: RailroadCrossing = {\n    id: 0,\n    fld_naam_ramses: '',\n    fld_actief_passief: '',\n    type_pn: '',\n    fld_geo_x: '',\n    fld_geo_y: '',\n    fld_postcode_en_gemeente: '',\n    position_du_passage_a_niveau: {\n      lat: 0,\n      lon: 0\n    },\n    type_lc: '',\n  }\n\n  constructor(private route: ActivatedRoute, private railroadCrossingsService: RailroadCrossingsService, private router: Router) { }\n\n  ngOnInit(): void {\n    this.route.paramMap.subscribe({\n      next: (params) => {\n        const id = params.get('id');\n        if (id) {\n          this.railroadCrossingsService.getRailroadCrossingById(id).subscribe({\n            next: (response) => {\n              this.railroadCrossingDetail = response;\n            }\n          });\n        }\n      }\n    })\n  }\n\n  updateRailroadCrossing() {\n    this.railroadCrossingsService.updateRailroadCrossing(this.railroadCrossingDetail.id.toString(), this.railroadCrossingDetail)\n      .subscribe({\n        next: () => {\n          this.router.navigate(['/']);\n        }\n      });\n  }\n\n  deleteRailroadCrossing(id: string) {\n    this.railroadCrossingsService.deleteRailroadCrossing(id)\n      .subscribe({\n        next: () => {\n          this.router.navigate(['/']);\n        }\n      });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}